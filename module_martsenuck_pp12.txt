import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;

public class Module {

    public static void main(String[] args)
    {

        SwingUtilities.invokeLater(
                new Runnable()
                {
                    public void run()
                    {

                        JFrame moduleFrame = new ModuleMainWindow("Module");

                    }
                });


    }

    static class ModuleMainWindow extends JFrame implements ActionListener
    {

        ArrayList<JTextField> tfArrFirst= new ArrayList<>();
        JTextField tfFirstArrSize = new JTextField();
        JPanel pArrSizeSet = new JPanel();//1
        JLabel lFirstArr;//2
        JPanel pFirstArrElem = new JPanel();//3
        JButton bShowResults;

        ModuleMainWindow(String title) {

            super(title);
            setLayout(new GridLayout(6,1));

            pArrSizeSet.setLayout(new FlowLayout());
            pFirstArrElem.setLayout(new FlowLayout());

            JLabel lFirstDim = new JLabel("Размерность массива:");
            lFirstDim.setSize(100,30);
            pArrSizeSet.add(lFirstDim);

            tfFirstArrSize.setColumns(5);
            pArrSizeSet.add(tfFirstArrSize);

            JButton dimSetButton = new JButton("Ввод");
            dimSetButton.setSize(150, 30);
            dimSetButton.addActionListener(this);
            pArrSizeSet.add(dimSetButton);

            add(pArrSizeSet);

            lFirstArr = new JLabel("Массив");
            lFirstArr.setBorder(BorderFactory.createEmptyBorder(0, 20, 0, 0));
            lFirstArr.setSize(100,30);

            bShowResults = new JButton("Показать результат");
            bShowResults.setSize(350, 30);
            bShowResults.addActionListener(new ShowResults());

            int windWidth = 700, windHeight = 400;
            setBounds(Toolkit.getDefaultToolkit().getScreenSize().width / 2 - windWidth / 2, Toolkit.getDefaultToolkit().getScreenSize().height / 2 - windHeight / 2, windWidth, windHeight);
            setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
            setVisible(true);
            setResizable(false);

        }

        public void actionPerformed(ActionEvent e)
        {

            try{

                if(tfArrFirst.size()!=0)
                {

                    for (int i = 0; i< tfArrFirst.size(); i++)
                    {

                        tfArrFirst.get(i).setText("");


                    }

                }



                pFirstArrElem.removeAll();

                int firstArrSize = Integer.parseInt(tfFirstArrSize.getText());

                if (firstArrSize<1)
                {

                    throw new NumberFormatException("1");

                }

                if (firstArrSize>20)
                {

                    throw new RuntimeException();

                }

                this.add(lFirstArr);

                for (int i = 0; i< firstArrSize; i++)
                {

                    tfArrFirst.add(new JTextField());
                    tfArrFirst.get(i).setColumns(5);
                    pFirstArrElem.add(tfArrFirst.get(i));

                }

                this.add(pFirstArrElem);


                this.add(bShowResults);

                this.revalidate();

                this.repaint();

            }
            catch (NumberFormatException E)
            {

                JOptionPane.showMessageDialog(new JFrame(),"Введите правильные значения","Ошибка ввода",JOptionPane.ERROR_MESSAGE);

            }
            catch (RuntimeException E)
            {

                JOptionPane.showMessageDialog(new JFrame(),"Введите размерность <=20","Ошибка ввода",JOptionPane.ERROR_MESSAGE);

            }


        }

        class ShowResults implements ActionListener
        {


            public void actionPerformed(ActionEvent e) {

                try
                {

                    int firstArrSize = Integer.parseInt(tfFirstArrSize.getText());

                    ArrayList<Double> repeatingNumsArr = new ArrayList<Double>();
                    ArrayList<Double> firstArr = new ArrayList<Double>();


                    for (int i= 0; i<firstArrSize;i++)
                    {

                        firstArr.add(Double.parseDouble(tfArrFirst.get(i).getText()));

                    }


                    for (int i = 0; i<firstArrSize;i++)
                    {


                    }




                    JFrame moduleInfoWindow = new ModuleInfoWindow("Module",repeatingNumsArr);



                }
                catch (NumberFormatException E)
                {

                    JOptionPane.showMessageDialog(new JFrame(),"Введите правильные значения","Ошибка ввода",JOptionPane.ERROR_MESSAGE);

                }



            }

        }

    }

    static class ModuleInfoWindow extends JFrame
    {

        ModuleInfoWindow(String title, ArrayList<Double> repeatingNumsArr)
        {

            super(title);

            setLayout(new FlowLayout());




            int windWidth = 400, windHeight = 200;
            setBounds(Toolkit.getDefaultToolkit().getScreenSize().width / 2 - windWidth / 2, Toolkit.getDefaultToolkit().getScreenSize().height / 2 - windHeight / 2, windWidth, windHeight);
            setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
            setVisible(true);
            setResizable(false);


        }

    }

}
